AngularJS topics:-
A) Node Version.
	node -v
	v19.1.0
	
B) NPM Version:-
	npm -v
	8.19.3	
	
c) Angular Version
	ng version
   Angular Cli:-15.1.6
   Angular :- 15.2.0
====================================   
   								===========================================================================
1) install Angular Project.						TypeScript:-
	npm install -g @angular/cli@v						-Premitives
										-complex Premitives
2) create a new project								-Type Infrence 
	ng new my-first-project							-Function , Generic , class, Interface. 
   -change the directory								
	cd my-first-project
   -Run the project						===========================================================================	
	ng serve
	
3) create a new Component						AngularJS Basics:-
	ng generate component my-first-component					-Adding new component
										-component template, style and selectors.
4) create a new module								-Data Binding :-
	ng generate module my-first-module						-String Interpolation
											-Property Binding
5) create Component without test file.							-Event Binding
	ng generate component my-first-component --skip-tests true			-Two way Binding
											-Directives
6) Install Bootstrap into project						     structural directives:-
	npm install --save  bootstrap@v5.2.3						-*ngIf
											-*ngIf else
										     Attribute directives:-				==============================================================				-ngStyle
											-ngClass
											-*ngFor
Important Topics:-											
								===========================================================================
ElementRef
TemplateRef
ViewContainerRef
Renderer
rxjs
communication between Component
Rounting								
ngrx				
					
					
					
===============================================================										AngularProject:-									  						        RootComponent	    														      	
		-Header-Component						    	
		-Recipes								
		   -Recipe-detail							
		   -Recipe-list							   
			-Recipe-item							
		-Shoping-list							
		   -Shoping-edit							
			
			
			
===============================================================			
Component & Data Binding Deep Dive:-
	-Custom Property and Event Binding
		-@Input()
		-@Output()
	-local Refrences in Template
		-#serverNameInput
	-View Encapsulation
		encapsulation:ViewEncapsulation.Native
					       .None
					       .Emulated
	-@Viewchild()
		#serverContentInput
		@Viewchild('serverContentInput',{static:true})serverInputContent:ElementRef;
		this.serverContentInput.NativeElement.value
	-ng-content
		<ng-content></ng-content>
	-component life-cycle
		ngOnChanges()
		ngOnInit()
		ngDoCheck()
		ngAfterContentInit()
		ngAfterContentChecked()
		ngAfterViewInit()
		ngAfterViewChecked()
		ngOnDestroy()
		
		
	-life-cycle Hooks and Template Access
		-ng-content with @ContentChild
		
		
		
===============================================================================================		
		
		
		
Errors:-

1)Property 'recipe' has no initializer and is not definitely assigned in the constructor
	-
	Just go to tsconfig.json and set
		"compilerOptions": {
    			"strictPropertyInitialization": false,
    			...
			}
			
=================================================================================================			
			

Directives Deep Dive:-

	Renderer
	@HostListerner
	@HostBinding
	ngSwitch 
		-*ngSwitchCase
		-*ngSwitchDefault
	
	
==================================================================================================

Using Services & Dependency Injection:-
	- create service :-
		export class myservice{
		loadService(){}
		}
	
	-Injecting myservice into component:-
	   step-1) import { myservice } from './myServices'.
	   step-2) @Component({
	 		selector:
			templateUrls:
			provider:[myservice]
		})
	  step-3) constructor(service:myservice){}
	  step-4) this.service.loadService().
		
	-Herachical of service Injector:-
		1) AppModule
		2) AppComponent
		3) AnyotherComponent
	
	-Injecting services into services:-
		1) Inject service into AppModule
		2) Inject service into another service
			@Injectable()
			constructor(service:myservice){}
			
		
=======================================================================================================		
